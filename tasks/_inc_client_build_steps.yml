---

- name: Install packages with yarn
  yarn:
    executable: "yarn --network-timeout 300000 --check-files"
    path: "{{ galaxy_server_dir }}/client"
  environment:
    PATH: "{{ galaxy_venv_dir }}/bin:{{ ansible_env.PATH }}"
    VIRTUAL_ENV: "{{ galaxy_venv_dir }}"

- name: Ensure Galaxy version is set
  include_tasks: _inc_galaxy_version.yml
  when: __galaxy_major_version is undefined

- name: Ensure deconstructed build is supported
  assert:
    that:
      - __galaxy_major_version is version('19.09', '>=')
    success_msg: "Deconstructed client build is supported"
    fail_msg: "Deconstructed client build is not supported for Galaxy version {{ __galaxy_major_version }}, please set 'galaxy_client_make_target'"

- name: Run gulp  # noqa no-changed-when
  command: yarn run gulp {{ item }}
  args:
    chdir: "{{ galaxy_server_dir }}/client"
  with_items: "{{ galaxy_client_build_steps[__galaxy_major_version] | default(galaxy_client_build_steps.default) }}"
  environment:
    PATH: "{{ galaxy_server_dir }}/client/node_modules/.bin:{{ galaxy_venv_dir }}/bin:{{ ansible_env.PATH }}"
    VIRTUAL_ENV: "{{ galaxy_venv_dir }}"
    NODE_ENV: "{{ galaxy_client_node_env }}"

- name: Run webpack  # noqa no-changed-when
  command: "yarn run webpack{{ (galaxy_client_node_env == 'production') | ternary('-production', '') }}"
  args:
    chdir: "{{ galaxy_server_dir }}/client"
  environment:
    PATH: "{{ galaxy_server_dir }}/client/node_modules/.bin:{{ galaxy_venv_dir }}/bin:{{ ansible_env.PATH }}"
    VIRTUAL_ENV: "{{ galaxy_venv_dir }}"
    GXY_BUILD_SOURCEMAPS: 1

- name: Stage built client
  command: "yarn run stage-build"
  args:
    chdir: "{{ galaxy_server_dir }}/client"
  environment:
    PATH: "{{ galaxy_server_dir }}/client/node_modules/.bin:{{ galaxy_venv_dir }}/bin:{{ ansible_env.PATH }}"
    VIRTUAL_ENV: "{{ galaxy_venv_dir }}"
  when: "__galaxy_major_version is version('23.0', '>=')"
