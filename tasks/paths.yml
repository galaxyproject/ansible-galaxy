---

- name: Manage Paths
  block:

    # try to become root. if you need something fancier, don't use the role and write your own
    - name: Create galaxy_root
      file:
        path: "{{ galaxy_root }}"
        state: directory
        owner: "{{ __galaxy_privsep_user_name }}"
        group: "{{ __galaxy_privsep_user_group }}"
        mode: "{{ __galaxy_dir_perms }}"
      when: galaxy_root is defined

    - name: Create additional privilege separated directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ __galaxy_privsep_user_name }}"
        group: "{{ __galaxy_user_group }}" #This is set so that the galaxy_user can read the files in the priv_sep dirs. (As priv_sep dirs have defauly perms of 0640.)
        mode: "{{ __galaxy_dir_perms }}"
      with_items: "{{ galaxy_privsep_dirs }}"
      when: item | default(False)

    - name: Create additional directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ __galaxy_user_name }}"
        group: "{{ __galaxy_user_group }}"
        mode: "{{ __galaxy_dir_perms }}"
      with_items: "{{ galaxy_dirs }}"

  # TODO: for root squashing it might be useful for this to be separate from other root tasks
  remote_user: "{{ galaxy_remote_users.root | default(__galaxy_remote_user) }}"
  become: "{{ true if galaxy_become_users.root is defined else __galaxy_become }}"
  become_user: "{{ galaxy_become_users.root | default(__galaxy_become_user) }}"
