---
- name: Create subdomain static dirs
  ansible.builtin.file:
    state: directory
    mode: '0755'
    owner: "{{ __galaxy_privsep_user_name }}"
    group: "{{ __galaxy_privsep_user_group }}"
    path: "{{ galaxy_themes_static_path }}/{{ item }}"
  with_items:
    - "static-{{ subdomain.name }}"
    - "static-{{ subdomain.name }}/dist"

- name: Register files in static/dist
  ansible.builtin.find:
    paths: "{{ galaxy_static_dir }}/dist"
    file_type: file
  when: galaxy_themes_symlinks
  register: dist_files

- name: "Symlink files static-{{ subdomain.name }}/dist to static/dist"
  ansible.builtin.file:
    src: "{{ item.path }}"
    dest: "{{ galaxy_themes_static_path }}/static-{{ subdomain.name }}/dist/{{ item.path | basename }}"
    state: link
  when: galaxy_themes_symlinks
  no_log: "{{ galaxy_themes_symlinks_no_log }}"
  with_items: "{{ dist_files.files }}"

- name: "Symlink directory {{ item }} from static-{{ subdomain.name }}/{{ item }} to static/{{ item }}"
  ansible.builtin.file:
    src: "{{ galaxy_static_dir }}/{{ item }}"
    dest: "{{ galaxy_themes_static_path }}/static-{{ subdomain.name }}/{{ item }}"
    state: link
  when: galaxy_themes_symlinks
  ignore_errors: true
  with_items:
    - "plugins"
    - "patmat"
    - "toolshed"
    - "wymeditor"
    - "style"

- name: Synchronize contents from static to static-"{{ subdomain.name }}"
  ansible.posix.synchronize:
    src: "{{ galaxy_static_dir }}/"
    dest: "{{ galaxy_themes_static_path }}/static-{{ subdomain.name }}"
    rsync_opts: ["--ignore-existing"]
  delegate_to: "{{ inventory_hostname }}"

- name: Check if welcome.html is present in files
  ansible.builtin.stat:
    path: "{{ galaxy_themes_ansible_file_path }}/{{ subdomain.name }}/static/welcome.html"
  register: custom_welcome

- name: Create welcome.html directory
  ansible.builtin.file:
    state: directory
    mode: '0755'
    owner: "{{ __galaxy_privsep_user_name }}"
    group: "{{ __galaxy_privsep_user_group }}"
    path: "{{ galaxy_themes_static_path }}/static-{{ subdomain.name }}/welcome.html"

- name: Check if iframe for subdomain exists
  ansible.builtin.uri:
    url: "{{ galaxy_themes_welcome_url_prefix }}{{ subdomain.name }}.html"
    return_content: true
  register: galaxy_themes_use_iframe
  failed_when: false
  when: not custom_welcome.stat.exists

- name: Template welcome.html for subdomains
  ansible.builtin.template:
    src: welcome.html.j2
    dest: "{{ galaxy_themes_static_path }}/static-{{ subdomain.name }}/welcome.html/index.html"
    owner: "{{ __galaxy_privsep_user_name }}"
    group: "{{ __galaxy_privsep_user_group }}"
    mode: '0644'
  when: not custom_welcome.stat.exists

- name: Include copy_static_files.yml
  ansible.builtin.include_tasks: copy_static_files.yml
  loop: "{{ galaxy_themes_static_keys | dict2items }}"
  loop_control:
    loop_var: object
