---
# main tasks file for galaxyproject.galaxy

# Deploy a Galaxy server
#   https://docs.galaxyproject.org/

- name: Ensure that mutually exclusive options are not set
  assert:
    that:
      - "(galaxy_manage_clone + galaxy_manage_download + galaxy_manage_existing) <= 1"
    fail_msg: |
      "Only one of variables galaxy_manage_clone, galaxy_manage_download and galaxy_manage_existing can be true."
  tags: always

# To my knowledge there is no other way to know whether or not the consumer of this role has set `become: true` outside
# this role, and `become: {{ foo | default(omit) }}` on a task/block actually clobbers the higher level use of `become`.
# This is a temporary solution.
- name: Set privilege separation default variables
  set_fact:
    __galaxy_remote_user: "{{ ansible_user_id | default(omit) }}"
    __galaxy_become: "{{ ansible_env.SUDO_USER is defined }}"
    __galaxy_become_user: "{{ ansible_user_id | default(omit) }}"
  tags: always

- name: Import layout variable tasks
  import_tasks: layout.yml
  tags: always

- name: Include user creation tasks
  include_tasks:
    file: user.yml
    apply:
      tags: galaxy_create_user
  when: galaxy_create_user or galaxy_create_privsep_user
  tags:
    - galaxy_create_user

- name: Collect Galaxy user facts
  import_tasks: user-facts.yml
  tags: always

- name: Include path management tasks
  include_tasks:
    file: paths.yml
    apply:
      tags: galaxy_manage_paths
  when: galaxy_manage_paths
  tags:
    - galaxy_manage_paths

- name: Include clone tasks
  include_tasks:
    file: clone.yml
    apply:
      tags: galaxy_manage_clone
  when: galaxy_manage_clone
  tags: galaxy_manage_clone

- name: Include download tasks
  include_tasks:
    file: download.yml
    apply:
      tags: galaxy_manage_download
  when: galaxy_manage_download
  tags: galaxy_manage_download

- name: Include manage existing galaxy tasks
  include_tasks:
    file: existing.yml
    apply:
      tags: galaxy_manage_existing
  when: galaxy_manage_existing
  tags: galaxy_manage_existing

- name: Include static config setup tasks
  include_tasks:
    file: static_setup.yml
    apply:
      tags: galaxy_config_files
  when: galaxy_manage_static_setup
  tags: galaxy_config_files

- name: Include dependency setup tasks
  include_tasks:
    file: dependencies.yml
    apply:
      tags: galaxy_fetch_dependencies
  when: galaxy_fetch_dependencies
  tags:
    - galaxy_fetch_dependencies

- name: Include mutable config setup tasks
  include_tasks:
    file: mutable_setup.yml
    apply:
      tags: galaxy_manage_mutable_setup
  when: galaxy_manage_mutable_setup
  tags:
    - galaxy_manage_mutable_setup

- name: Include database management tasks
  include_tasks:
    file: database.yml
    apply:
      tags: galaxy_manage_database
  when: galaxy_manage_database
  tags:
    - galaxy_manage_database

- name: Include client build tasks
  include_tasks:
    file: client.yml
    apply:
      tags: galaxy_build_client
  when: galaxy_build_client
  tags:
    - galaxy_build_client

- name: Include error document setup tasks
  include_tasks:
    file: errordocs.yml
    apply:
      tags: galaxy_manage_errordocs
  when: galaxy_manage_errordocs
  tags:
    - galaxy_manage_errordocs

- name: Include Gravity setup tasks
  include_tasks:
    file: gravity.yml
    apply:
      tags: galaxy_manage_gravity
  when: galaxy_manage_gravity
  tags:
    - galaxy_manage_gravity

- name: Include systemd unit setup tasks (Galaxy)
  include_tasks:
    file: systemd-galaxy.yml
    apply:
      tags: galaxy_manage_systemd
  when: galaxy_manage_systemd and galaxy_systemd_mode in ["mule", "gravity"]
  tags:
    - galaxy_manage_systemd

- name: Include systemd unit setup tasks (Reports)
  include_tasks:
    file: systemd-reports.yml
    apply:
      tags: galaxy_manage_systemd_reports
  when: galaxy_manage_systemd_reports
  tags:
    - galaxy_manage_systemd_reports

- name: Include cleanup scheduling tasks
  include_tasks:
    file: cleanup.yml
    apply:
      tags: galaxy_manage_cleanup
  when: galaxy_manage_cleanup
  tags:
    - galaxy_manage_cleanup
