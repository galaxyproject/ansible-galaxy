---

- name: Build Galaxy client
  block:

    - name: Ensure client_build_hash.txt exists
      copy:
        content: "new-unbuilt"
        dest: "{{ galaxy_static_dir }}/client_build_hash.txt"
        mode: 0644
        force: no

    - name: Get current client commit id
      slurp:
        src: "{{ galaxy_static_dir }}/client_build_hash.txt"
      register: __galaxy_client_build_version_result

    - name: Check if Galaxy was checked out from git
      stat:
        path: "{{ galaxy_server_dir }}/.git"
      register: __galaxy_from_git

    - name: Get current Galaxy commit id  # noqa git-latest
      git:
        dest: "{{ galaxy_server_dir }}"
        repo: "{{ galaxy_repo }}"
        update: no
      register: __galaxy_git_stat_result
      when: __galaxy_from_git.stat.exists

    - name: Set client build version fact
      set_fact:
        __galaxy_client_build_version: "{{ galaxy_client_force_build | ternary('FORCE-BUILD', __galaxy_client_build_version_result.content | b64decode | trim) }}"

    - name: Set galaxy commit ID fact
      set_fact:
        __galaxy_current_commit_id: "{{ __galaxy_git_stat_result.after if __galaxy_from_git.stat.exists else 'none' }}"
      when: __galaxy_from_git.stat.exists

    - name: Build Galaxy client if needed
      block:

        - name: Report client version mismatch
          debug:
            msg: "Galaxy client is out of date: {{ __galaxy_client_build_version }} != {{ __galaxy_current_commit_id }}"
          changed_when: true
          when: __galaxy_from_git.stat.exists

        - name: Include client build tools process
          include_tasks: "_inc_client_install_tools.yml"

        - name: Include client build process
          include_tasks: "_inc_client_build_{{ 'make' if galaxy_client_make_target is not none else 'steps' }}.yml"

      when: not __galaxy_from_git.stat.exists or (__galaxy_client_build_version != __galaxy_current_commit_id)

  remote_user: "{{ galaxy_remote_users.privsep | default(__galaxy_remote_user) }}"
  become: "{{ true if galaxy_become_users.privsep is defined else __galaxy_become }}"
  become_user: "{{ galaxy_become_users.privsep | default(__galaxy_become_user) }}"
  when: not galaxy_client_use_prebuilt

- name: Install prebuilt client
  block:
    - name: Ensure prebuilt client is supported
      assert:
        that:
          - __galaxy_major_version is version('23.0', '>=')
        success_msg: "Prebuilt client is supported"
        fail_msg: "Prebuilt client is not supported for Galaxy version {{ __galaxy_major_version }}, '>= 23.0' required."

    - name: Include client install tools process
      include_tasks: "_inc_client_install_tools.yml"

    - name: Install prebuilt client with yarn
      yarn:
        executable: "yarn --check-files"
        path: "{{ galaxy_server_dir }}"
      environment:
        PATH: "{{ galaxy_venv_dir }}/bin:{{ ansible_env.PATH }}"
        VIRTUAL_ENV: "{{ galaxy_venv_dir }}"
      register: __yarn_install
      changed_when: "'already up-to-date' not in __yarn_install.out | lower"

    - name: Stage prebuilt client # noqa no-changed-when
      command: "yarn run stage"
      args:
        chdir: "{{ galaxy_server_dir }}"
      environment:
        PATH: "{{ galaxy_server_dir }}/client/node_modules/.bin:{{ galaxy_venv_dir }}/bin:{{ ansible_env.PATH }}"
        VIRTUAL_ENV: "{{ galaxy_venv_dir }}"
      when: __yarn_install.changed

  remote_user: "{{ galaxy_remote_users.privsep | default(__galaxy_remote_user) }}"
  become: "{{ true if galaxy_become_users.privsep is defined else __galaxy_become }}"
  become_user: "{{ galaxy_become_users.privsep | default(__galaxy_become_user) }}"
  when: galaxy_client_use_prebuilt
